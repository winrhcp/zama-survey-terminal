/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ZamaSurvey,
  ZamaSurveyInterface,
} from "../../contracts/ZamaSurvey";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SurveySubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canViewOwnAnswers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSurveyTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSubmissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasSubmitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8[5]",
        name: "answerInputs",
        type: "bytes32[5]",
      },
      {
        internalType: "bytes[5]",
        name: "inputProofs",
        type: "bytes[5]",
      },
    ],
    name: "submitAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSurveys",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610d6b380380610d6b83398101604081905261002f9161027e565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161022e565b506101e3610107604080516080810182526000808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d5956020820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac9181019190915273bc91f3dad1a5f19f8390c400196e58073b6a0bc4606082015290565b80517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea60080546001600160a01b03199081166001600160a01b039384161790915560208301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6018054831691841691909117905560408301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6028054831691841691909117905560608301517fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6038054909216921691909117905550565b7f5ea69329017273582817d320489fbd94f775580e90c092699ca6f3d12fdf7d0080546001600160a01b0319167333347831500f1e73f0cccbb95c9f86b94d7b1123179055506102ae565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561029057600080fd5b81516001600160a01b03811681146102a757600080fd5b9392505050565b610aae806102bd6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636df65281116100665780636df652811461016b578063715018a61461017e5780638da5cb5b14610186578063b771bbec146101a1578063f2fde38b146101b457600080fd5b8063125f45a8146100a35780631e00f48c146100c9578063388044b3146100de57806354554d46146101115780636454036d14610119575b600080fd5b6100b66100b13660046108cb565b6101c7565b6040519081526020015b60405180910390f35b6100dc6100d73660046108f7565b610253565b005b6101016100ec3660046108cb565b60026020526000908152604090205460ff1681565b60405190151581526020016100c0565b6100b661045d565b61014c6101273660046108cb565b600160205260009081526040902080546006909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100c0565b6100b6610179366004610946565b61046d565b6100dc610556565b6000546040516001600160a01b0390911681526020016100c0565b6101016101af3660046108cb565b61056a565b6100dc6101c23660046108cb565b61059c565b6001600160a01b03811660009081526002602052604081205460ff166102345760405162461bcd60e51b815260206004820152601d60248201527f5573657220686173206e6f74207375626d69747465642073757276657900000060448201526064015b60405180910390fd5b506001600160a01b031660009081526001602052604090206006015490565b3360009081526002602052604090205460ff16156102b35760405162461bcd60e51b815260206004820152601860248201527f53757276657920616c7265616479207375626d69747465640000000000000000604482015260640161022b565b6102bb610847565b60005b600581101561039f5761033f8382600581106102dc576102dc610970565b6020028101906102ec9190610986565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250889250859150506005811061033457610334610970565b6020020135906105da565b82826005811061035157610351610970565b602002015261037582826005811061036b5761036b610970565b60200201516105ef565b5061039682826005811061038b5761038b610970565b6020020151336105ff565b506001016102be565b50604080516060810182523380825260208083018581524284860152600092835260019182905293909120825181546001600160a01b0319166001600160a01b0390911617815592519192916103f9918301906005610865565b506040918201516006909101553360008181526002602052829020805460ff1916600117905590517fe0761bd9d1832e3fe90645c845f1ddcf3cdcc55a5413982e0fac841c3ec6c62f906104509042815260200190565b60405180910390a2505050565b6000610467610612565b50600090565b6000600582106104b65760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840c2dce6eecae440d2dcc8caf60631b604482015260640161022b565b6001600160a01b03831660009081526002602052604090205460ff1661051e5760405162461bcd60e51b815260206004820152601d60248201527f5573657220686173206e6f74207375626d697474656420737572766579000000604482015260640161022b565b6001600160a01b038316600090815260016020819052604090912001826005811061054b5761054b610970565b015490505b92915050565b61055e610612565b610568600061063f565b565b6001600160a01b03811660009081526002602052604081205460ff1680156105505750506001600160a01b0316331490565b6105a4610612565b6001600160a01b0381166105ce57604051631e4fbdf760e01b81526000600482015260240161022b565b6105d78161063f565b50565b60006105e88383600261068f565b9392505050565b60006105fb82306107b8565b5090565b600061060b83836107b8565b5090919050565b6000546001600160a01b031633146105685760405163118cdaa760e01b815233600482015260240161022b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6015460405163196d0b9b60e01b81526000917fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600916001600160a01b039091169063196d0b9b906107099088903390899089906004016109d4565b6020604051808303816000875af1158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c9190610a5f565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec90604401600060405180830381600087803b15801561079857600080fd5b505af11580156107ac573d6000803e3d6000fd5b50505050509392505050565b60007fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea6008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b6290604401600060405180830381600087803b15801561082a57600080fd5b505af115801561083e573d6000803e3d6000fd5b50505050505050565b6040518060a001604052806005906020820280368337509192915050565b8260058101928215610893579160200282015b82811115610893578251825591602001919060010190610878565b506105fb9291505b808211156105fb576000815560010161089b565b80356001600160a01b03811681146108c657600080fd5b919050565b6000602082840312156108dd57600080fd5b6105e8826108af565b8060a0810183101561055057600080fd5b60008060c0838503121561090a57600080fd5b61091484846108e6565b915060a083013567ffffffffffffffff81111561093057600080fd5b61093c858286016108e6565b9150509250929050565b6000806040838503121561095957600080fd5b610962836108af565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261099d57600080fd5b83018035915067ffffffffffffffff8211156109b857600080fd5b6020019150368190038213156109cd57600080fd5b9250929050565b8481526000602060018060a01b038616602084015260806040840152845180608085015260005b81811015610a175786810183015185820160a0015282016109fb565b50600060a0828601015260a0601f19601f8301168501019250505060548310610a5057634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b600060208284031215610a7157600080fd5b505191905056fea2646970667358221220a8adda00bbfa8e19a62d495be02c9ed6eeecdb10c541a79abcc9f6ef616e313564736f6c63430008180033";

type ZamaSurveyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZamaSurveyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZamaSurvey__factory extends ContractFactory {
  constructor(...args: ZamaSurveyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      ZamaSurvey & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZamaSurvey__factory {
    return super.connect(runner) as ZamaSurvey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZamaSurveyInterface {
    return new Interface(_abi) as ZamaSurveyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZamaSurvey {
    return new Contract(address, _abi, runner) as unknown as ZamaSurvey;
  }
}
