/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ZamaSurvey,
  ZamaSurveyInterface,
} from "../../contracts/ZamaSurvey";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SurveySubmitted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canViewOwnAnswers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAnswer",
    outputs: [
      {
        internalType: "euint8",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSurveyTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSubmissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasSubmitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8[5]",
        name: "answerInputs",
        type: "bytes32[5]",
      },
      {
        internalType: "bytes[5]",
        name: "inputProofs",
        type: "bytes[5]",
      },
    ],
    name: "submitAnswers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userSurveys",
    outputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200153a3803806200153a8339818101604052810190620000379190620001f4565b80600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000237565b60405180910390fd5b620000be81620000c660201b60201c565b505062000254565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001bc826200018f565b9050919050565b620001ce81620001af565b8114620001da57600080fd5b50565b600081519050620001ee81620001c3565b92915050565b6000602082840312156200020d576200020c6200018a565b5b60006200021d84828501620001dd565b91505092915050565b6200023181620001af565b82525050565b60006020820190506200024e600083018462000226565b92915050565b6112d680620002646000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80636df65281116100665780636df652811461016e578063715018a61461019e5780638da5cb5b146101a8578063b771bbec146101c6578063f2fde38b146101f65761009e565b8063125f45a8146100a35780631e00f48c146100d3578063388044b3146100ef57806354554d461461011f5780636454036d1461013d575b600080fd5b6100bd60048036038101906100b89190610c85565b610212565b6040516100ca9190610ccb565b60405180910390f35b6100ed60048036038101906100e89190610d2f565b6102ea565b005b61010960048036038101906101049190610c85565b6105cb565b6040516101169190610da6565b60405180910390f35b6101276105eb565b6040516101349190610ccb565b60405180910390f35b61015760048036038101906101529190610c85565b6105fc565b604051610165929190610dd0565b60405180910390f35b61018860048036038101906101839190610e25565b610640565b6040516101959190610e90565b60405180910390f35b6101a661076f565b005b6101b0610783565b6040516101bd9190610eab565b60405180910390f35b6101e060048036038101906101db9190610c85565b6107ac565b6040516101ed9190610da6565b60405180910390f35b610210600480360381019061020b9190610c85565b610839565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029790610f23565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601549050919050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610f8f565b60405180910390fd5b61037f610b9e565b60005b60058110156104435761041a8382600581106103a1576103a0610faf565b5b6020028101906103b19190610fed565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505085836005811061040757610406610faf565b5b60200201356108bf90919063ffffffff16565b82826005811061042d5761042c610faf565b5b6020020181815250508080600101915050610382565b5060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200142815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101906005610512929190610bc0565b50604082015181600601559050506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fe0761bd9d1832e3fe90645c845f1ddcf3cdcc55a5413982e0fac841c3ec6c62f426040516105be9190610ccb565b60405180910390a2505050565b60026020528060005260406000206000915054906101000a900460ff1681565b60006105f56108d5565b6000905090565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154905082565b600060058210610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c9061109c565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610711576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070890610f23565b60405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101826005811061076557610764610faf565b5b0154905092915050565b6107776108d5565b610781600061095c565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561083257508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6108416108d5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108b35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108aa9190610eab565b60405180910390fd5b6108bc8161095c565b50565b60006108cd83836002610a20565b905092915050565b6108dd610b6e565b73ffffffffffffffffffffffffffffffffffffffff166108fb610783565b73ffffffffffffffffffffffffffffffffffffffff161461095a5761091e610b6e565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109519190610eab565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080610a2b610b76565b90508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663196d0b9b863387876040518563ffffffff1660e01b8152600401610a9094939291906111d2565b6020604051808303816000875af1158015610aaf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad3919061124a565b91508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633e395cec83336040518363ffffffff1660e01b8152600401610b34929190611277565b600060405180830381600087803b158015610b4e57600080fd5b505af1158015610b62573d6000803e3d6000fd5b50505050509392505050565b600033905090565b60007fed8d60e34876f751cc8b014c560745351147d9de11b9347c854e881b128ea600905090565b6040518060a00160405280600590602082028036833780820191505090505090565b8260058101928215610bef579160200282015b82811115610bee578251825591602001919060010190610bd3565b5b509050610bfc9190610c00565b5090565b5b80821115610c19576000816000905550600101610c01565b5090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c5282610c27565b9050919050565b610c6281610c47565b8114610c6d57600080fd5b50565b600081359050610c7f81610c59565b92915050565b600060208284031215610c9b57610c9a610c1d565b5b6000610ca984828501610c70565b91505092915050565b6000819050919050565b610cc581610cb2565b82525050565b6000602082019050610ce06000830184610cbc565b92915050565b600080fd5b600081905082602060050282011115610d0757610d06610ce6565b5b92915050565b600081905082602060050282011115610d2957610d28610ce6565b5b92915050565b60008060c08385031215610d4657610d45610c1d565b5b6000610d5485828601610ceb565b92505060a083013567ffffffffffffffff811115610d7557610d74610c22565b5b610d8185828601610d0d565b9150509250929050565b60008115159050919050565b610da081610d8b565b82525050565b6000602082019050610dbb6000830184610d97565b92915050565b610dca81610c47565b82525050565b6000604082019050610de56000830185610dc1565b610df26020830184610cbc565b9392505050565b610e0281610cb2565b8114610e0d57600080fd5b50565b600081359050610e1f81610df9565b92915050565b60008060408385031215610e3c57610e3b610c1d565b5b6000610e4a85828601610c70565b9250506020610e5b85828601610e10565b9150509250929050565b6000819050919050565b6000610e7a82610e65565b9050919050565b610e8a81610e6f565b82525050565b6000602082019050610ea56000830184610e81565b92915050565b6000602082019050610ec06000830184610dc1565b92915050565b600082825260208201905092915050565b7f5573657220686173206e6f74207375626d697474656420737572766579000000600082015250565b6000610f0d601d83610ec6565b9150610f1882610ed7565b602082019050919050565b60006020820190508181036000830152610f3c81610f00565b9050919050565b7f53757276657920616c7265616479207375626d69747465640000000000000000600082015250565b6000610f79601883610ec6565b9150610f8482610f43565b602082019050919050565b60006020820190508181036000830152610fa881610f6c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261100a57611009610fde565b5b80840192508235915067ffffffffffffffff82111561102c5761102b610fe3565b5b60208301925060018202360383131561104857611047610fe8565b5b509250929050565b7f496e76616c696420616e7377657220696e646578000000000000000000000000600082015250565b6000611086601483610ec6565b915061109182611050565b602082019050919050565b600060208201905081810360008301526110b581611079565b9050919050565b6110c581610e65565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111055780820151818401526020810190506110ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061112d826110cb565b61113781856110d6565b93506111478185602086016110e7565b61115081611111565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6054811061119b5761119a61115b565b5b50565b60008190506111ac8261118a565b919050565b60006111bc8261119e565b9050919050565b6111cc816111b1565b82525050565b60006080820190506111e760008301876110bc565b6111f46020830186610dc1565b81810360408301526112068185611122565b905061121560608301846111c3565b95945050505050565b61122781610e65565b811461123257600080fd5b50565b6000815190506112448161121e565b92915050565b6000602082840312156112605761125f610c1d565b5b600061126e84828501611235565b91505092915050565b600060408201905061128c60008301856110bc565b6112996020830184610dc1565b939250505056fea264697066735822122056480f8f20669c2b21eef2f09b80607061ea0f9c41eae4b72b9cf2ed3e93061d64736f6c63430008180033";

type ZamaSurveyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZamaSurveyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZamaSurvey__factory extends ContractFactory {
  constructor(...args: ZamaSurveyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(owner, overrides || {});
  }
  override deploy(
    owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(owner, overrides || {}) as Promise<
      ZamaSurvey & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZamaSurvey__factory {
    return super.connect(runner) as ZamaSurvey__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZamaSurveyInterface {
    return new Interface(_abi) as ZamaSurveyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZamaSurvey {
    return new Contract(address, _abi, runner) as unknown as ZamaSurvey;
  }
}
